how to use my GLOBAL color control styles (in ListBoxColorAP.CS) and NWOrder/NWCustomer Db DataTemplates (in NWDataTemplates) with
any ListBox/ListView in the system

 Set these 2 properties in the LISTBOX section of the cntrol declaration

ItemContainerStyle="{DynamicResource ListBoxColorControlTemplate}"
ItemTemplate="{StaticResource NwCustomersDataTemplate1}"
Then the AP defines the following color control properties as AP's

 Brush Background
 Brush BackgroundColor 
 double FontSize
 double FontWeight
 Brush Foreground 
 double ItemHeight
 Brush MouseoverBackground
 Brush MouseoverForeground 
 Brush MouseoverSelectedBackground
 Brush MouseoverSelectedForeground
 Brush SelectionBackground
 Brush SelectionForeground
 
=================================================
There are various generic DataTemplates in NWDataTemplates.xaml

These are all For NorthWest Database
Currently only Orders and Customers are defined.

=================================================
how to access Attached properties

Where AP is a seperate file located in the viewModels Folder (declared as "models" in the xaml file, 
and is containing various Attached Properties suxch as 'test' used here.

Method 1 :
Text="{Binding (models:AP.test), RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"           

Method 2 :
Text="{Binding (local:AP.test), RelativeSource={RelativeSource TemplatedParent}}"

=================================================

And also how to set the AP value's from code Where AP is a seperate file 
located in the viewModels Folder (declared as "models" in the xaml file, 
               
               models:AP.MouseoverForeground="{StaticResource Black0}"

=================================================

// how to control listbox/view/datagrid etc
        <ListBox x:Name="lv1"
                        SelectionMode="Single"
                        ItemsSource="{Binding nwc}"
                        SelectedItem="{Binding nwcustomer}"
                        VirtualizingPanel.IsVirtualizing="True"
                        
                        // Important links ...in Resource section !
                        ItemTemplate="{DynamicResource DataTemplate1}" 
                        ItemContainerStyle="{DynamicResource ListBoxItemStyle1}">
                        />

                        eg:
        <Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border x:Name="Bd" SnapsToDevicePixels="true">
                                          
                                          <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                                    </Border>
                                    <ControlTemplate.Triggers>
                                          <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                      <Condition Property="IsMouseOver" Value="False"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Blue6}"/>
                                          </MultiTrigger>
                                 </ControlTemplate.Triggers>
                                 more ....
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


=================================================

//How to pass a Dp or other variable/property value  as a parameter to a converter by adding XPath=property to the converter clause

Height="{Binding Height, ElementName=Innergrid, Converter={StaticResource AddTopOffset}, XPath=TextTopMargin}"
=================================================

//How to call a converter from c#

			//Converter name is SetTextTopOffset 
			SetTextTopOffset conv = new SetTextTopOffset ( );
			Thickness t = ButtonText . Margin; 
			t.Top =Convert.ToInt32(conv . Convert ( t.Top, typeof(int), TextTopMargin, CultureInfo.CurrentCulture ));
			ButtonText . Margin = t;

=================================================

            /// How to pass a click event thru to end user of any UserControl
            / Must declare the event
            public event RoutedEventHandler Click;

            private void OnClick ( object sender, MouseButtonEventArgs e )
            {
                    if ( this . Click != null )
                    {
                            this . Click ( this, e );
                    }
            }

=================================================

// How to access main dependencies reliably

ScaleX="{Binding TextWidthScale, RelativeSource={RelativeSource FindAncestor,	AncestorType=local:ThreeDeeBtnControl}}"/>

=================================================

// how  to use transform....

								<Rectangle
										Height="44"  Width="120" 
										Canvas.Left="290" 
										Canvas.Top="32" 
										Fill="{StaticResource Red3}">
										<Rectangle.RenderTransform>
											<TransformGroup>
												<ScaleTransform/>
												<SkewTransform x:Name="TestSkew" AngleX="15" AngleY="5"/>
												<RotateTransform x:Name="testRotate" Angle="10"/>
												<TranslateTransform x:Name="TestTranslate" X="12" Y="23"/>
											</TransformGroup>
										</Rectangle.RenderTransform>
										<Rectangle.Style>
											<Style TargetType="Rectangle">
												<Style.Triggers>
													<Trigger Property="IsMouseOver" Value="True">
														<Setter Property="Opacity" Value="0.35"/>
													</Trigger>

												</Style.Triggers>
											</Style>
										</Rectangle.Style>

									</Rectangle>

=================================================

how to modify any control in line in XAML

		<xxxControl.Style>
				<Style TargetType="Rectangle">
					<Style.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Opacity" Value="0.35"/>
						</Trigger>
					</Style.Triggers>
				</Style>
			</Rectangle.Style>

			//You can use this format almost anywhere to change any Dependency Poperty
//			SetValue ( $$owner$$.BtnTextProperty, "here ya go !" );

/Allows control to Override default properties, & lets DP objects be inherited
OverridesDefaultStyle=True

=================================================

<!--Set up a data context pointing to Bank data for our Listview i the tab control-->
can be used most anywhere in XAML code

<Canvas.DataContext>
	<datamodel:BankAccountViewModel/>
</Canvas.DataContext>
=================================================

		<!--// How to pass value parameters to a Multi Converter, so ThreeDeeBtnControl is accessible in the Converter-->
			<local:ThreeDeeBtnControl.Width>
				<MultiBinding Converter="{StaticResource WidthMultiConverter}">
					<Binding />
					<Binding Path="TextSize" ElementName="DisplayWindow"/>
					<Binding Path="FontDecoration" ElementName="DisplayWindow"/>
				</MultiBinding>
			</local:ThreeDeeBtnControl.Width>

=================================================


        //You can use this format almost anywhere to change a Dependency Poperty

                 SetValue ( xxxxxxProperty, "here ya go !" );

=================================================

            // How to access a DP in a converter
            needs :
            using System . Windows;
            
            DependencyObject dpo = new DependencyObject ( );
            object  dobj = dpo . GetValue ( ImgButton . ImgWidthProperty );
            double offset = System.Convert.ToDouble(dobj);

=================================================

	<Grid x:Name="BtnGrid"
			VerticalAlignment="Stretch"
			HorizontalAlignment="Stretch" 
			MouseEnter="Control_MouseEnter"
			MouseLeave="Control_MouseLeave" Margin="0,0,41,77" 
				>
		<!--<Grid.ColumnDefinitions>
			<ColumnDefinition Width="158*"/>
			<ColumnDefinition Width="217*"/>
			<ColumnDefinition Width="126*"/>
			<ColumnDefinition Width="18*"/>
		</Grid.ColumnDefinitions>-->
		<Border x:Name="ActiveBorder"
				CornerRadius="8"
				BorderThickness="{Binding Path=BtnBorderWidth, ElementName=ImageButton}"
				BorderBrush="{Binding Path=BtnBorderColor, ElementName=ImageButton}"
				MouseEnter="Control_MouseEnter"
				MouseLeave="Control_MouseLeave" 
				Margin="0,0,-41,-75"
				MouseLeftButtonDown="RectBtn_MouseLeftButtonDown">
			<!--#region transforms etc-->

			<Border.RenderTransform>
				<TransformGroup>
					<ScaleTransform ScaleX="1" ScaleY="1"/>
					<SkewTransform/>
					<RotateTransform/>
					<TranslateTransform X="0" Y="0"/>
				</TransformGroup>
			</Border.RenderTransform>

			<Border.Effect>

				<!--// This uses ALL options-->

				<DropShadowEffect 						
							Color="{Binding Path=ShadowBlurColor, ElementName=ImageButton}"
							Opacity="{Binding Path=ShadowOpacity, ElementName=ImageButton}"
							ShadowDepth="{Binding Path=ShadowBlurSize, ElementName=ImageButton}"
							BlurRadius="{Binding Path=ShadowBlurRadius, ElementName=ImageButton}"
							RenderingBias="Quality"						
							Direction="49"/>
			</Border.Effect>

			<!--#endregion-->

		</Border>
		<!--<Viewbox x:Name="vbox"
				   Panel.ZIndex="2"
				Stretch="Fill" Margin="0,0,0,0">-->

		<Grid x:Name="Innergrid"
				Width="560"
			MouseEnter="Control_MouseEnter"
			MouseLeave="Control_MouseLeave" Margin="0,3,-41,-77" HorizontalAlignment="Left" 
			
			>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="{Binding Width, ElementName=Innergrid}"/>
				<ColumnDefinition/>
			</Grid.ColumnDefinitions>
			<StackPanel
				Orientation="Horizontal"
				Height="{Binding Height, ElementName=Innergrid}"
				Width="{Binding Width, ElementName=Innergrid}"
				>
				<!--Height="{Binding ImageHeight, ElementName=ImageButton}"-->
				<Image x:Name="ImgName" 
					Opacity="1"
					MouseEnter="Control_MouseEnter"
					MouseLeave="Control_MouseLeave" 
					Visibility="Visible"
					LayoutUpdated="ImgName_LayoutUpdated"
					Source ="pack://application:,,,/icons/cloud.png" 
				 Margin="0,0,0,0" 
									/>
				<!--Width="{Binding Path=Width, ElementName=Innergrid, Converter={StaticResource resetTextWidth}, XPath=ImageWidth}"-->
				<TextBlock x:Name="ButtonText"
				     Panel.ZIndex="5"
				     Background="Beige"
				     HorizontalAlignment="Center"
					MouseEnter="Control_MouseEnter"
					MouseLeave="Control_MouseLeave" 
				     TextAlignment="Center"
					Text="{Binding Path=ImgBtnText, ElementName=ImageButton}"
					TextWrapping="Wrap"
					Loaded="Textblock_change"
					Foreground="{Binding Path=BtnForeground, ElementName=ImageButton}"					
					FontSize="{Binding Path=BtnTextSize, ElementName=ImageButton}" 
					Margin="0,5,2,5" 
					SizeChanged="TextWidthChanged" 
					LayoutUpdated="layoutchanged" 
				     Width="365" 
				     RenderTransformOrigin="0.747,0.519" 
					      />

			</StackPanel>
		</Grid>
	</Grid>

=================================================

How to Sort data on multiple fields using the Linq

                // This creates a Dictionary containing ONLY the fields specified in the 1st section
            var Customers = NwCustomers6 . AsEnumerable ( ) . GroupBy ( d => new
            {
                    d . Country,
                    d.City
            } )
            . Select ( gg => new
            {
                    Country = gg . Key . Country,
                    _City = gg.Key.City,
                    //pcode = gg.Key.PostalCode
            })
            . ToList ( );


            // By here, I have a list of countries + Cities alone in no particular order
            //so organise theentire Db into ordered sequence by Countries and then Cities

            //Create new List<objects> for our sorted output
            ObservableCollection<nwcustomer> NwCust = new ObservableCollection<nwcustomer> ( );

            foreach ( var country in Customers )
            {
                    foreach ( var item in NwCustomers6 )
                    {
                            if ( item . Country == country . Country )
                            {
                                    foreach ( var city in item.Country)
                                    {
                                                        NwCust . Add ( item );
                                                    //Console . WriteLine ( $"{item . Country}, {item . City}, {item . CompanyName}" );
                                    }
                                }
                    }
            }
                        
            // We now have a list arranged by City's inside Country's

=================================================

How   to bind items in c#

                private void SetUpListbox ( )
                {
                        this.Background = new SolidColorBrush (Colors.LightGray);
                        Binding binding = new Binding ( "Background" );
                        binding . Source = lbcontrol.Background;
                        lbcontrol . SetBinding ( BackgroundProperty, binding );

                        this . Foreground = new SolidColorBrush ( Colors . Black );
                        Binding binding2 = new Binding ( "Foreground" );
                        binding2 . Source = lbcontrol . Foreground;
                        lbcontrol . SetBinding ( ForegroundProperty, binding2 );
                        
                        Binding binding3 = new Binding ( "ItemTemplate" );
                        binding3 . Source = lbcontrol . ItemTemplate;
                        lbcontrol . SetBinding ( ItemTemplateProperty, binding3 );

                        this.ItemsSource = null;
                        Binding binding4 = new Binding ( "ItemsSource" );                        
                        binding4 . Source = lbcontrol . ItemsSource;
                        lbcontrol . SetBinding ( lbcontrol . ItemsSourceProperty, binding4 );

                        //Binding binding5 = new Binding ( "ItemContainerStyle" );
                        //binding5 . Source = ItemContainerStyle;
                        //lbcontrol . SetBinding ( ListBox . ItemsSourceProperty, binding5 );

                        //Binding binding6 = new Binding ( "" );
                        //binding6 . Source = ;
                        //lbcontrol . SetBinding ( ListBox . Property, binding6 );

                }
=================================================


